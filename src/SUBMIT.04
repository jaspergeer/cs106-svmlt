CS 106 Homework Submission

Note:
Our UFT can be compiled by navigating to the `huft` directory and running
`make huft`. This will place a symlink to the binary in the top level `bin`
directory. Tests are located in `huft/test`, asm grammar is located in `huft`

What person or group is submitting this homework?

  - Alex Bai, Jasper Geer

What work are you proud of?

  - GETTING THE HASKELL UFT TO WORK

What code would you like help improving?  Are there bugs you'd like
help finding during code review?

  - AsmParse.hs, more concise/readable way for parsing virtual assembly
    code

What code, if any, would you especially like the course staff to
review?  Why?

  - String Literal parsing, caused many bugs during implementation.

In this course, all code may be shared freely.  Aside from code that
is distributed with the assignment, does your submission contain any
other code that you got from someone else?  If so, what code is it
(file names and line numbers please) and who supplied it?

  - No

In response to last week's code review, have you made any material
changes?  What were they?  By file name and line number, where are
they found in the code?  If you remember, who helped you during code
review?

  - syntax for loading a function, AsmParse.hs:170


We have a plenary code review tomorrow.  Are you willing to present
(as a group, if applicable)?

  - Yes

Supposing you are not selected to present at tomorrow's plenary code
review, what code would you like to see presented?  What would you
learn the most from?

  - label elimination, how to write an infinite loop in assembly code that
    runs in svm, and with step by step explanation

Again supposing you are not selected to present, who in your group is
willing to serve on the review panel?

  - Jasper, Alex

#!/bin/bash


function die {
  echo "$*" >&2
  exit 2
}



output=$(mktemp)

predefvo=$(mktemp)

testout=$(mktemp)
testerr=$(mktemp)

trap "rm -f $output $predefvo $testout $testerr" 0 1 2 3 6 9  # not sure if /bin/sh supports...

verbose=

while [[ $# -gt 0 ]]; do
  case $1 in
    -bin) if [[ -x "$2"/svm && -x "$2/uft" ]]; then
            PATH=$2:$PATH ; shift 2
          else
            die "Directory $2 is missing either svm or uft"
          fi
          ;;
    -v) verbose="$verbose"yes ; shift ;;
    -*) die "unknown option" ;;
    *) break ;;
  esac
done

vscheme -predef | uft ho-vo > $predefvo

failure=

function passes {
  if [[ "$verbose" = yesyes* ]]; then echo "$1 passes $2"; fi
}

function fails {
  if [[ -n "$verbose" && -z "$failure" ]]; then echo "$1" fails "$2"; fi
  if [[ -z "$failure" ]]; then
    failure="$2"
  fi
}

function check_stdout {
  if [[ -r "$2" ]]; then
    if cmp -s "$2" "$3"; then
      passes $1 stdout
    else
      fails $1 stdout
    fi
  else
    case "$(cat $3)" in
      The?only?test?passed.|Both?tests?passed.|All*tests?passed.) passes $1 stdout ;;
      *) fails $1 stdout ;;
    esac
  fi
}

function check_stderr {
  if [[ -r "$2" ]]; then
    if cmp -s "$2" "$3"; then
      passes $1 stderr
    else
      fails $1 stderr
    fi
  elif [[ x"$(cat $3)" != x ]]; then
    fails $1 stderr
    if [[ -n "$verbose" && "$failure" = stderr ]]; then cat $3; fi
  fi
}


function large_object_failure  {
  typeset testerr="$(cat "$1")"
  if [[ "$testerr" = Large-object?allocator?not?implemented* ]]; then
    return 0
  else
    return 1
  fi
}

      

for i
do
  base=${i%.scm}
  base=${base%.es}
  argv=$base.argv
  stdout=$base.1
  stderr=$base.2
  exit=$base.x
  failure=

  case $i in
    *.scm) lang=ho-vo ;;
    *.es)  lang=es-vo ;;
    *) die "unknown file type" ;;
  esac

  command=(svm $predefvo -)
  if [[ -r $argv ]]; then
    command+=(-- $(cat $argv) )
  fi

  trap "echo hello : do nothing" ABRT

  uft $lang "$i" | ( ${command[@]} > $testout 2>$testerr || false ) 2> /dev/null
  testexit=$?

  if large_object_failure $testerr; then
    echo "$i cannot be run: heap pages aren't big enough"
  else
    check_stderr $i $stderr $testerr
    check_stdout $i $stdout $testout
    # check_exit $i $exit $testexit
  fi

  if [[ -n "$failure" && -z "$verbose" ]]; then
    echo "$i failed $failure"
  fi
done

